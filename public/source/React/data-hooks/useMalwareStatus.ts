import { useQuery } from '@tanstack/react-query';
import { API } from 'utils/helpers/api';
import { MALWARE_STATUS } from 'constants/queryKeys';

interface RansomSigDBVersion {
  install_time: number;
  packager: string;
  release: number;
  vendor: string;
  version: string;
}

interface RansomSigDBResponse {
  name: string;
  versions: RansomSigDBVersion[];
  data: any;
}

const getMalwareStatus = (sessionId: string) => async () => {
  const { data } = await API.get<RansomSigDBResponse>(
    '/configurations/packages/ransomsigdb',
    {
      headers: {
        sessionId
      }
    }
  );
  return data;
};

interface Params {
  session: string;
}

const useMalwareStatus = ({ session }: Params) => {
  return useQuery({
    queryKey: [MALWARE_STATUS, session],
    queryFn: getMalwareStatus(session),
    select: (data) => {
      const date = new Date(
        data.versions[data.versions.length - 1].install_time * 1000
      );
      const formattedData = {
        date: date.toLocaleDateString('en-US'),
        version: data.versions[data.versions.length - 1].version
      } as const;
      return formattedData;
    },
    refetchOnMount: 'always'
  });
};

export default useMalwareStatus;
